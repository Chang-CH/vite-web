#!/bin/bash
# TODO: Generated by chatgpt, TEST FIRST

# Function to extract frontmatter from an MDX file
extract_frontmatter() {
    local file="$1"
    local key="$2"
    grep -E "^${key}: " "$file" | sed -E "s/^${key}: //"
}

# Function to get git creation and modification times
get_git_times() {
    local file="$1"
    createdAt=$(git log --diff-filter=A --format=%at -- "$file" | tail -1)
    modifiedAt=$(git log -1 --format=%at -- "$file")
}

# Recursive function to create pages.json for a directory
generate_pages_json() {
    local dir="$1"
    local json_path="$dir/pages.json"

    echo "{" >"$json_path"
    echo '  "directoryTitle": "Example Directory",' >>"$json_path"
    echo '  "directoryDescription": "This is an example directory description.",' >>"$json_path"
    echo '  "pages": [' >>"$json_path"

    local index=0
    for file in "$dir"/*; do
        if [ -d "$file" ] && [ -n "$(find "$file" -name '*.mdx')" ]; then
            echo "    {" >>"$json_path"
            echo '      "title": "",' >>"$json_path"
            echo '      "description": "",' >>"$json_path"
            echo "      \"id\": $index," >>"$json_path"
            echo '      "isMdx": true,' >>"$json_path"
            echo '      "isFolder": true,' >>"$json_path"
            echo '      "createdAt": 0,' >>"$json_path"
            echo '      "modifiedAt": 0,' >>"$json_path"
            echo "      \"route\": \"$(basename "$file")\"" >>"$json_path"
            echo "    }," >>"$json_path"
            index=$((index + 1))
            generate_pages_json "$file"
        elif [[ "$file" == *.mdx ]]; then
            get_git_times "$file"
            title=$(extract_frontmatter "$file" "title")
            description=$(extract_frontmatter "$file" "description")
            echo "    {" >>"$json_path"
            echo "      \"title\": \"${title}\"," >>"$json_path"
            echo "      \"description\": \"${description}\"," >>"$json_path"
            echo "      \"id\": $index," >>"$json_path"
            echo '      "isMdx": true,' >>"$json_path"
            echo '      "isFolder": false,' >>"$json_path"
            echo "      \"createdAt\": $createdAt," >>"$json_path"
            echo "      \"modifiedAt\": $modifiedAt," >>"$json_path"
            echo "      \"route\": \"$(basename "${file%.mdx}")\"" >>"$json_path"
            echo "    }," >>"$json_path"
            index=$((index + 1))
        elif [[ "$file" == *.md ]]; then
            get_git_times "$file"
            echo "    {" >>"$json_path"
            echo '      "title": "",' >>"$json_path"
            echo '      "description": "",' >>"$json_path"
            echo "      \"id\": $index," >>"$json_path"
            echo '      "isMdx": false,' >>"$json_path"
            echo '      "isFolder": false,' >>"$json_path"
            echo "      \"createdAt\": $createdAt," >>"$json_path"
            echo "      \"modifiedAt\": $modifiedAt," >>"$json_path"
            echo "      \"route\": \"$(basename "${file%.md}")\"" >>"$json_path"
            echo "    }," >>"$json_path"
            index=$((index + 1))
        fi
    done

    # Remove trailing comma from last page
    sed -i '$s/,$//' "$json_path"

    echo '  ],' >>"$json_path"
    echo '  "hasMorePages": false' >>"$json_path"
    echo "}" >>"$json_path"
}

# Run the function for the initial directory
generate_pages_json "projects"
